from fbchat import Client, log, _graphql
from fbchat.models import *
import pymongo, re
# from keep_alive import keep_alive

admins = ['100007289010328', '100083658307984', '100082754857375']

myclient = pymongo.MongoClient("mongodb+srv://UCManage:Nabilmim123@ucmanager.sa47l3e.mongodb.net/?retryWrites=true&w=majority")
mydb = myclient["UCdata"].ucdata
userdb = myclient["UCdata"].userInfo


def users():
    return [i['uid'] for i in userdb.find({})]


class ChatBot(Client):
    global mydb

    def onMessage(self, mid=None, author_id=None, message_object=None, thread_id=None, thread_type=ThreadType.USER, **kwargs):                                   
        
    
        global command, fullmsg, msg
        fullmsg = str(message_object.text)
        print(fullmsg)

        command = fullmsg.split(" ")[0].lower()
        msg = fullmsg.replace(command+" ", "")

        if command == "/adduc" and author_id in admins:
            bdt = msg.split()[0]
            if bdt not in ["80", '160', '405', '810', '1625', '161', '162', '800', '2000']:
                self.send(Message(text='P ü·¥á·¥Äs·¥á S·¥ò·¥á·¥Ñ…™“ì è C·¥è Ä Ä·¥á·¥Ñ·¥õ  ô·¥Ö·¥õ \n\nEx·¥Ä·¥ç·¥ò ü·¥á : /uc 80 <UCs>', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                pass
            try:
                txt = message_object.replied_to.text
            except:
                txt = msg
            ucs = re.findall('(\w{4}-\w-S-\d{8} \d{4}-\d{4}-\d{4}-\d{4})', txt)
            oldLst = mydb.find({"type":"ucs"})[0][bdt]
            newLst = list(set(oldLst + ucs))
            mydb.update_one({"type":"ucs"},{'$set':{bdt : newLst}})
            self.send(Message(text=f'S·¥ú·¥Ñ·¥áss“ì·¥ú ü !!\n\nN·¥á·¥° A·¥Ö·¥Ö·¥á·¥Ö üÜÑÔ∏éüÖ≤Ô∏é  :   {len(newLst)-len(oldLst)}  P·¥Ñs\nT·¥è·¥õ·¥Ä ü {bdt}  üÜÑÔ∏éüÖ≤Ô∏é   :   {len(newLst)} P·¥Ñs', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)

        elif command == "/signup" :
            if author_id in admins:
                if thread_type == ThreadType.USER:
                    author_id = thread_id
                elif thread_type == ThreadType.GROUP:
                    try:
                        author_id = message_object.replied_to.author
                    except:
                        self.send(Message(text="R·¥á·¥ò ü è T·¥è Us·¥á Äs M·¥áss·¥Ä…¢·¥á!", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                        pass
            if author_id in users():
                self.send(Message(text='Us·¥á Ä A ü Ä·¥á·¥Ä·¥Ö è R·¥á…¢…™s·¥õ·¥á Ä·¥á·¥Ö!.', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)

            else:
                name = client.fetchUserInfo(author_id)[author_id].name
                data = {
                        "uid" : author_id,
                        "name" : name,
                        "balance" : {"advance" : 0, 
                                    "baki":{"bakiLimit" : 0, 
                                            "due" : 0,
                                            "bakiUC" : {"80":0, "160" : 0, "405":0, "810":0, "1625" : 0, "161" : 0, "162" : 0, "800" : 0, '2000' : 0 }}
                                }
                        }
                userdb.insert_one(data)
                self.send(Message(text=f'Us·¥á Ä {name} R·¥á…¢…™s·¥õ·¥á Ä·¥á·¥Ö!!. ', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)

        elif "/bakilimit" == command and author_id in admins:
            if thread_type == ThreadType.USER:
                user = thread_id
            elif thread_type == ThreadType.GROUP:
                try:
                    user = message_object.replied_to.author
                except:
                    self.send(Message(text="R·¥á·¥ò ü è T·¥è Us·¥á Äs M·¥áss·¥Ä…¢·¥á!", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                    pass
            try:
                tk = int(msg)
            except:
                self.send(Message(text='Numbers Only.. ', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                pass

            balanceData = userdb.find({"uid":user})[0]['balance']
            balanceData['baki']['bakiLimit'] = tk
            userdb.update_one({"uid":user}, {"$set":{'balance':balanceData}})
            # userdb.find({"uid":user})[0]['balance']['baki']['bakiLimit']
            self.send(Message(text=f'B·¥Ä·¥ã…™ L…™·¥ç…™·¥õ U·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö T·¥è : {tk} T·¥ã', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)

        elif "/addbalance" == command and author_id in admins:
            if thread_type == ThreadType.USER:
                user = thread_id
            elif thread_type == ThreadType.GROUP:
                try:
                    user = message_object.replied_to.author
                except:
                    self.send(Message(text="R·¥á·¥ò ü è T·¥è Us·¥á Äs M·¥áss·¥Ä…¢·¥á!", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                    pass
            try:
                tk = int(msg)
            except:
                self.send(Message(text='Numbers Only.. ', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                pass

            balanceData = userdb.find({"uid":user})[0]['balance']
            balanceData['advance'] += tk
            userdb.update_one({"uid":user}, {"$set":{'balance':balanceData}})
            balance = userdb.find({"uid":user})[0]['balance']['advance']
            self.send(Message(text=f'B·¥Ä ü·¥Ä…¥·¥Ñ·¥á A·¥Ö·¥Ö·¥á·¥Ö : {tk} Tk.\n\nN·¥á·¥° B·¥Ä ü·¥Ä…¥·¥Ñ·¥á  : {balance}', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)


        elif command == '/uc':
            if author_id in admins or author_id in users():
                bdt = msg.split()[0]
                try:
                    ammount = msg.split()[1]
                except:
                    ammount = 1

                if bdt not in ["80", '160', '405', '810', '1625', '161', '162', '800', '2000']:
                    self.send(Message(text='P ü·¥á·¥Äs·¥á S·¥ò·¥á·¥Ñ…™“ì è C·¥è Ä Ä·¥á·¥Ñ·¥õ  ô·¥Ö·¥õ \n\nEx·¥Ä·¥ç·¥ò ü·¥á : /uc 80 <ammount>', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                    return

                try:
                    ammount = int(ammount)
                    if ammount < 0 :
                        self.send(Message(text='O…¥ ü è Positive N·¥ú·¥ç ô·¥á Ä. \n\nEx·¥Ä·¥ç·¥ò ü·¥á : /uc 80 2', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                        pass

                except:
                    self.send(Message(text='O…¥ ü è N·¥ú·¥ç ô·¥á Ä. \n\nEx·¥Ä·¥ç·¥ò ü·¥á : /uc 80 2', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                    pass

                avUC = mydb.find({"type":"ucs"})[0][bdt]
                if len(avUC) == 0:
                    self.send(Message(text=f'‚ö†Ô∏é {bdt} üÜÑÔ∏éüÖ≤Ô∏é S·¥õ·¥è·¥Ñ·¥ã O·¥ú·¥õ ‚ö†Ô∏é', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                
                elif len(avUC) < ammount:
                    self.send(Message(text=f'‚ö†Ô∏é O…¥ ü è {len(avUC)} P…™·¥Ñ·¥ás {bdt} üÜÑÔ∏éüÖ≤Ô∏é A·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ‚ö†Ô∏é', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                
                else:
                    if author_id in admins:
                        sendUc = ""
                        for i in range(ammount):
                            sendUc = sendUc + "‚Ä¢ " + avUC.pop(0) + "\n"

                        sendUc = sendUc + f'\n\n‚úì {bdt} üÜÑÔ∏éüÖ≤Ô∏é  x  {ammount}  ‚úì'
                        self.send(Message(text=sendUc, reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                        mydb.update_one({"type":"ucs"},{'$set':{bdt : avUC}})

                    else:
                        itemPrice = mydb.find({"type":"ucPrice"})[0][bdt]
                        totalPrice = itemPrice * ammount
                        userInfo = userdb.find({"uid":author_id})[0]
                        userBalance = userInfo['balance']['advance']
                        
                        if userBalance >=  totalPrice:
                            userInfo['balance']['advance'] -= totalPrice
                            userdb.update_one({"uid":author_id}, {"$set":{'balance':userInfo['balance']}})
                            sendUc = ""
                            for i in range(ammount):
                                sendUc = sendUc + "‚Ä¢ " + avUC.pop(0) + "\n"

                            sendUc = sendUc + f'\n\n‚úì {bdt} üÜÑÔ∏éüÖ≤Ô∏é  x  {ammount}  ‚úì'
                            self.send(Message(text=sendUc, reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                            mydb.update_one({"type":"ucs"},{'$set':{bdt : avUC}})
                            self.send(Message(text=f"B·¥Ä ü·¥Ä…¥·¥Ñ·¥á : {userBalance} - ({itemPrice} x {ammount}) = {userInfo['balance']['advance']}"), thread_id=thread_id, thread_type=thread_type)

                        else:
                            self.send(Message(text=f"Y·¥è·¥ú Ä·¥ú D·¥è…¥·¥õ H·¥Ä·¥†·¥á E…¥·¥è·¥ú…¢ ú B·¥Ä ü·¥Ä…¥·¥Ñ·¥á.\n\n\nB·¥Ä ü·¥Ä…¥·¥Ñ·¥á :{userBalance}\n\nR·¥á«´·¥ú…™ Ä·¥á·¥Ö : {itemPrice} x {ammount} = {totalPrice}", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                            pass
            else:
                self.send(Message(text=f'Y·¥è·¥ú A Ä·¥á N·¥è·¥õ A…¥ Us·¥á Ä!', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)


        elif command == "/stock" and (author_id in admins or author_id in users()):
            stock = mydb.find({"type":"ucs"})[0]
            USDT = mydb.find({"type":"priceUSDT"})[0]
            totalUSDT = USDT['80']*len(stock['80'])+USDT['160']*len(stock['160'])+USDT['405']*len(stock['405'])+USDT['810']*len(stock['810'])+USDT['1625']*len(stock['1625'])+USDT['161']*len(stock['161'])+USDT['162']*len(stock['162'])+USDT['800']*len(stock['800'])+USDT['2000']*len(stock['2000'])
            text = f'''
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
‚òûÔ∏éÔ∏éÔ∏é 80     üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {len(stock['80'])} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 160    üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {len(stock['160'])} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 405   üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {len(stock['405'])} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 810    üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {len(stock['810'])} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 1625  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {len(stock['1625'])} ·¥ò·¥Ñs


‚òûÔ∏éÔ∏éÔ∏é 161  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {len(stock['161'])} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 162  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {len(stock['162'])} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 800  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {len(stock['800'])} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 2000 üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {len(stock['2000'])} ·¥ò·¥Ñs

‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
W·¥è Ä·¥õ ú O“ì : {round(totalUSDT,2)} ·¥ús·¥Ö·¥õ 
            '''
            self.send(Message(text=text, reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)

        elif command == "/addgc" and author_id in admins:
            try:
                self.addUsersToGroup(thread_id, thread_id="6026226014138998")
            except:
                pass
        

        elif command == "/baki" and thread_id not in admins and (author_id in admins or author_id in users()):
            if author_id in admins:
                if thread_type == ThreadType.USER:
                    user = thread_id
                elif thread_type == ThreadType.GROUP:
                    try:
                        user = message_object.replied_to.author
                    except:
                        self.send(Message(text="R·¥á·¥ò ü è T·¥è Us·¥á Äs M·¥áss·¥Ä…¢·¥á!", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                        pass
                    
            elif author_id in users():
                user = author_id
            bdt = msg.split()[0]
            try:
                ammount = msg.split()[1]
            except:
                ammount = 1

            if bdt not in ["80", '160', '405', '810', '1625', '161', '162', '800', '2000']:
                self.send(Message(text='P ü·¥á·¥Äs·¥á S·¥ò·¥á·¥Ñ…™“ì è C·¥è Ä Ä·¥á·¥Ñ·¥õ  ô·¥Ö·¥õ \n\nEx·¥Ä·¥ç·¥ò ü·¥á : /baki 80 <ammount>', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                pass

            try:
                ammount = int(ammount)
                if ammount < 0 :
                    self.send(Message(text='O…¥ ü è Positive N·¥ú·¥ç ô·¥á Ä. \n\nEx·¥Ä·¥ç·¥ò ü·¥á : /baki 80 2', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                    pass

            except:
                self.send(Message(text='O…¥ ü è N·¥ú·¥ç ô·¥á Ä. \n\nEx·¥Ä·¥ç·¥ò ü·¥á : /baki 80 2', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                pass

            avUC = mydb.find({"type":"ucs"})[0][bdt]
            if len(avUC) == 0:
                self.send(Message(text=f'‚ö†Ô∏é {bdt} üÜÑÔ∏éüÖ≤Ô∏é S·¥õ·¥è·¥Ñ·¥ã O·¥ú·¥õ ‚ö†Ô∏é', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                pass

            elif len(avUC) < ammount:
                self.send(Message(text=f'‚ö†Ô∏é O…¥ ü è {len(avUC)} P…™·¥Ñ·¥ás {bdt} üÜÑÔ∏éüÖ≤Ô∏é A·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ‚ö†Ô∏é', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                pass
            
            else:
                userInfo = userdb.find({"uid":user})[0]
                dueLimit = userInfo['balance']['baki']['bakiLimit']
                due = userInfo['balance']['baki']['due']
                itemPrice = mydb.find({"type":"ucPrice"})[0][bdt]
                totalPrice = itemPrice*ammount

                if (due+totalPrice) <= dueLimit:
                    userInfo['balance']['baki']['due'] += totalPrice
                    userInfo['balance']['baki']['bakiUC'][bdt] += ammount
                    userdb.update_one({"uid":user}, {"$set":{'balance' :userInfo['balance']}})

                    sendUc = ""
                    for i in range(ammount):
                        sendUc = sendUc + "‚Ä¢ " + avUC.pop(0) + "\n"

                    sendUc = sendUc + f'\n\n‚úì {bdt} üÜÑÔ∏éüÖ≤Ô∏é  x  {ammount}  ‚úì'
                    self.send(Message(text=sendUc, reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                    mydb.update_one({"type":"ucs"},{'$set':{bdt : avUC}})
                    self.send(Message(text=f"T·¥è·¥õ·¥Ä ü D·¥ú·¥á : {due} + ({itemPrice}x{ammount}) = {userInfo['balance']['baki']['due']}"), thread_id=thread_id, thread_type=thread_type)

                else:
                    self.send(Message(text=f"Y·¥è·¥ú Ä D·¥ú·¥á L…™·¥ç…™·¥õ Is O·¥†·¥á Ä.\n\nL…™·¥ç…™·¥õ     : {dueLimit}\n\nUs·¥á·¥Ö     : {userInfo['balance']['baki']['due']}\nL·¥á“ì·¥õ    : {dueLimit - userInfo['balance']['baki']['due']}\nR·¥á«´·¥ú…™ Ä·¥á·¥Ö : {itemPrice} x {ammount} = {totalPrice}", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                    pass


        elif command == '/addbaki' and (author_id in admins) and (thread_id not in admins):
            if thread_type == ThreadType.USER:
                user = thread_id
            elif thread_type == ThreadType.GROUP:
                try:
                    user = message_object.replied_to.author
                except:
                    self.send(Message(text="R·¥á·¥ò ü è T·¥è Us·¥á Äs M·¥áss·¥Ä…¢·¥á!", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                    pass

            bdt = msg.split()[0]
            if bdt not in ["80", '160', '405', '810', '1625', '161', '162', '800', '2000']:
                self.send(Message(text='P ü·¥á·¥Äs·¥á S·¥ò·¥á·¥Ñ…™“ì è C·¥è Ä Ä·¥á·¥Ñ·¥õ  ô·¥Ö·¥õ \n\nEx·¥Ä·¥ç·¥ò ü·¥á : /addbaki 80 <ammount>', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                pass

            try:
                ammount = msg.split()[1]
            except:
                ammount = 1
            try:
                ammount = int(ammount)
            except:
                self.send(Message(text='O…¥ ü è N·¥ú·¥ç ô·¥á Ä. \n\nEx·¥Ä·¥ç·¥ò ü·¥á : /addbaki 80 2', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                pass

            itemPrice = mydb.find({"type":"ucPrice"})[0][bdt]
            userInfo = userdb.find({"uid":user})[0]
            userInfo['balance']['baki']['bakiUC'][bdt] += ammount
            userInfo['balance']['baki']['due'] += itemPrice*ammount
            userdb.update_one({"uid":user}, {"$set":{'balance':userInfo['balance']}})
            self.send(Message(text='B·¥Ä·¥ã…™ L…™s·¥õ U·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö!\n\nUs·¥á C·¥è·¥ç·¥ç·¥Ä…¥·¥Ö "/check" T·¥è S·¥á·¥á Y·¥è·¥ú Ä L…™s·¥õ! ', reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)


        elif ("/check" == command or "/due" == command) and (author_id in users() or author_id in admins) and (thread_id not in admins):
            if author_id in admins:
                if thread_type == ThreadType.USER:
                    user = thread_id
                elif thread_type == ThreadType.GROUP:
                    try:
                        user = message_object.replied_to.author
                    except:
                        self.send(Message(text="R·¥á·¥ò ü è T·¥è Us·¥á Äs M·¥áss·¥Ä…¢·¥á!", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                        pass
                    
            elif author_id in users():
                user = author_id

            userInfo = userdb.find({"uid":user})[0] 
            due = userInfo['balance']['baki']['due']
            bakiUC = userInfo['balance']['baki']['bakiUC']
            text =f'''
‚òûÔ∏éÔ∏éÔ∏é 80   üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {bakiUC['80']} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 160  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {bakiUC['160']} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 405  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {bakiUC['405']} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 810  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {bakiUC['810']} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 1625 üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {bakiUC['1625']} ·¥ò·¥Ñs


‚òûÔ∏éÔ∏éÔ∏é 161  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {bakiUC['161']} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 162  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {bakiUC['162']} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 800  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {bakiUC['800']} ·¥ò·¥Ñs

‚òûÔ∏éÔ∏éÔ∏é 2000 üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {bakiUC['2000']} ·¥ò·¥Ñs

‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
‚òûÔ∏éÔ∏éÔ∏é T·¥è·¥õ·¥Ä ü D·¥ú·¥á ‚û™ {due} T·¥ã

            '''
            self.send(Message(text=text, reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
        

        elif command == "/clear" and author_id in admins:
            if thread_type == ThreadType.USER:
                user = thread_id
            elif thread_type == ThreadType.GROUP:
                try:
                    user = message_object.replied_to.author
                except:
                    self.send(Message(text="R·¥á·¥ò ü è T·¥è Us·¥á Äs M·¥áss·¥Ä…¢·¥á!", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
                    pass

            userInfo = userdb.find({"uid":user})[0]
            userInfo['balance']['baki']['due'] = 0
            userInfo['balance']['baki']['bakiUC'] = {'80': 0, '160': 0, '405': 0, '810': 0, '1625': 0, '161' : 0, '162' : 0, '800' : 0, '2000' : 0}
            userdb.update_one({"uid":user}, {"$set":{'balance':userInfo['balance']}})
            self.send(Message(text=f"D·¥ú·¥á C ü·¥á·¥Ä Ä O“ì {userInfo['name']} !\n\nT ú·¥Ä…¥·¥ãs F·¥è Ä Y·¥è·¥ú Ä S·¥ú·¥ò·¥ò·¥è Ä·¥õ ‚ù§Ô∏è‚ù§Ô∏è", reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)

        elif "/rate" == command and (author_id in admins or author_id in users()):
            itemPrice = mydb.find({"type":"ucPrice"})[0]
            text =f'''
‚òûÔ∏éÔ∏éÔ∏é 80   üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {itemPrice['80']} B·¥Ä…¥·¥ã

‚òûÔ∏éÔ∏éÔ∏é 160  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {itemPrice['160']} B·¥Ä…¥·¥ã

‚òûÔ∏éÔ∏éÔ∏é 405  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {itemPrice['405']} B·¥Ä…¥·¥ã

‚òûÔ∏éÔ∏éÔ∏é 810  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {itemPrice['810']} B·¥Ä…¥·¥ã

‚òûÔ∏éÔ∏éÔ∏é 1625 üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {itemPrice['1625']} B·¥Ä…¥·¥ã


‚òûÔ∏éÔ∏éÔ∏é 161  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {itemPrice['161']} B·¥Ä…¥·¥ã

‚òûÔ∏éÔ∏éÔ∏é 162  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {itemPrice['162']} B·¥Ä…¥·¥ã

‚òûÔ∏éÔ∏éÔ∏é 800  üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {itemPrice['800']} B·¥Ä…¥·¥ã

‚òûÔ∏éÔ∏éÔ∏é 2000 üÜÑÔ∏éüÖ≤Ô∏é  ‚û™  {itemPrice['2000']} B·¥Ä…¥·¥ã
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
‚òûÔ∏éÔ∏éÔ∏é SM Payment ‚û™ +1%


            '''
            self.send(Message(text=text, reply_to_id=mid), thread_id=thread_id, thread_type=thread_type)
        

        elif "/notify" == command and author_id in admins:
            bakiUsers = [{'uid' :i['uid'],'name':i['name'], 'due':i['balance']['baki']['due']} for i in userdb.find({}) if i['balance']['baki']['due'] != 0]
            if len(bakiUsers) != 0:
                for User in bakiUsers:

                    text = f'''
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
D·¥á·¥Ä Ä {User['name']} ‚ù§Ô∏è


‚û™ Y·¥è·¥ú Ä D·¥ú·¥á :  {User['due']} T·¥ã
‚û™ P ü·¥á·¥Äs·¥á P·¥Ä è !!
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî


'''
                    try:
                        print(User['uid'])
                        self.send(Message(text=text+msg), thread_id=User['uid'], thread_type=ThreadType.USER)

                    except Exception as ex:
                        print(ex)
            
     


while True: 
    try:
#         keep_alive()
        c_user = "100007289010328"
        xs = pymongo.MongoClient("mongodb+srv://pBot:%24%24Nabil%24%24@pbot.wttlhxr.mongodb.net/?retryWrites=true&w=majority")['Users'].userInfo.find({"c_user" : c_user})[0]["xs"]

        cookies = {
        "sb": "xasyYmAoy1tRpMGYvLxgkHBF",
        "fr": "0NxayJuewRHQ30OX3.AWVJwIYNh0Tt8AJv6kSwDamhkoM.BiMrVd.Iu.AAA.0.0.BiMtVZ.AWXMVaiHrpQ",
        "c_user": c_user,
        "datr": "xasyYs51GC0Lq5",
    " xs" : xs
    }
        client = ChatBot("","", session_cookies=cookies)
        print(client.isLoggedIn())
#         client.listen()
    except:
        continue
